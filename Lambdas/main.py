# игра "Угадай песню"
# (а также показывает скрытый смысл текста по самым часто встречающимся словам)
# ваша задача дописать код так, чтобы игра заработала.
# Как должна работать программа: на вход даете файл с текстом песни, на выходе получаете самые часто встречающиеся слова. Короткие слова (предлоги, союзы, метоимеия и пр.) лучше отфильтровать сразу

# читаем текст из файла. в переменной text будет строка
with open("duhast.txt", encoding="utf-8-sig") as f:
	text = f.read()
# сразу удаляем переводы строк - они нам не понадобятся
text = text.replace("\n", " ").lower()

# перед обработкой нужно убрать из текста лишние символы
# или, что то же самое, - оставить только буквы русского и латинского алфавита, знак "тире" и пробел
text_clean = "".join(list(map(lambda c: c if c >='а' and c<='я' or c >='a' and c<='z' or c == " " or c == "-" else "", text)))

# TODO 1: разбейте текст на слова способом, который предпочитаете, и сохраните результат в переменную words
words = text_clean.split(" ")
# TODO 2: напишите lambda-функцию для удаления пустых слов (подсказка: также используйте функцию filter)
words = list(filter(lambda x: x!="" and x!="-", words))

# TODO 3: оцените состав слов: отсортируйте все слова песни по длине по убыванию при помощи lambda-функции, как мы делали на лекции
sort_by_len = lambda x: len(x)
words.sort(key=sort_by_len, reverse=True)
#проверьте, что у вас получилось
print (words)
# TODO 4: подсчитайте статистику встречаемости слов в виде списка пар "частота" + "слово"
# подсказка: используйте генераторы списков из предпоследней лекции.
# пример: [len(x) for x in words] вернет вам список, содержащий длины всех слов из списка words
# для того, чтобы в список не попадало одно и то же слово много раз, мы используем множества
# x в данном случае - это каждое слово из списка
words_count = [[words.count(x), x] for x in set(words)]
print (words_count)
# TODO 5: соберите статистику в словарь так же, как мы делали для метро и квартир:
# ключ - частота встречаемости, значение - слова, которые встречаются с этой частотой. Слов может быть несколько!
        # добавьте в словарь words_dict значение pair[1] в список по ключу pair[0]
        # не забудьте проверить, существует ли у вас список для этого ключа, и если нет - создать его удобным для вас способом, как мы делали для квартир
        #ваш код для проверки ключа
        #ваш код для добавления данных по ключу
words_dict = dict()
for pair in words_count:
  if len(pair[1]) > 3:
    words_dict.setdefault(pair[0], [])
    words_dict[pair[0]].append(pair[1])
# TODO 6: выведите наиболее часто встречающиеся слова (например, первую половину списка со статистикой)
# (придумайте сами, как вы будете рассчитвать, какой индекс у половины списка)
# к этому моменту ваши данные должны выглядеть примерно так (для песни из файла pinksweater.txt):
# 10: ['бывает', 'есть']
# 9: ['меня', 'спросил', 'твитере']
# 6: ['свитере', 'розовом']
# 5: ['поняла']

# получаем все частоты. они же - ключи словаря
keys = list(words_dict.keys())
keys.sort(reverse=True)
middle = lambda x: round(len(x)/2) if len(x)>5 else len(x)
# выведите результат
for key in keys[0:middle(keys)]:
  if key > 1:
    print(key, ", ".join(words_dict[key]))

# конечный вывод должен выглядеть так:
# 10: бывает есть
# 9: меня спросил твитере
# 6: свитере розовом
# 5: поняла

# P.S. попробуйте догадаться, что же за песня была в файле pinksweater.txt...